{"version":3,"sources":["components/StateHeader.js"],"names":["StateHeader","data","t","stateCode","useTranslation","trail","useMemo","styles","map","element","index","push","animationDelay","spring","useSpring","total","getStatistic","config","SPRING_CONFIG_NUMBERS","className","style","meta","formatDate","last_updated","h2","to","formatNumber","tested","date","source","href","target","memo"],"mappings":"mHAAA,4DAOA,SAASA,EAAT,GAAyC,IAAD,UAAlBC,EAAkB,EAAlBA,KACbC,GAD+B,EAAZC,UACdC,cAALF,GAEDG,EAAQC,mBAAQ,WACpB,IAAMC,EAAS,GASf,MAPA,CAAC,EAAG,EAAG,GAAGC,KAAI,SAACC,EAASC,GAItB,OAHAH,EAAOI,KAAK,CACVC,eAAe,GAAD,OAAa,IAARF,EAAL,QAET,QAGFH,IACN,IAEGM,EAASC,oBAAU,CACvBC,MAAOC,YAAaf,EAAM,QAAS,UACnCgB,OAAQC,MAGV,OACE,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,cAAf,UACE,oBAAIA,UAAU,sBAAsBC,MAAO,CAACR,eAAgB,GAA5D,gCAGK,OAAJX,QAAI,IAAJA,GAAA,UAAAA,EAAMoB,YAAN,8BACC,oBAAIF,UAAU,WAAWC,MAAOf,EAAM,GAAtC,mBACMH,EAAE,mBADR,YAC8BoB,YAC1BrB,EAAKoB,KAAKE,aACV,aAHJ,YAIOrB,EAAE,aAKb,sBAAKiB,UAAU,wBAAwBC,MAAOf,EAAM,GAApD,UACE,6BAAKH,EAAE,YACP,cAAC,WAASsB,GAAV,UACGX,EAAOE,MAAMU,IAAG,SAACV,GAAD,OAAWW,YAAaX,EAAO,cAE7C,OAAJd,QAAI,IAAJA,GAAA,UAAAA,EAAMoB,YAAN,mBAAYM,cAAZ,eAAoBC,OACnB,oBAAIT,UAAU,YAAd,mBACMjB,EAAE,SADR,YACoBoB,YAAWrB,EAAKoB,KAAKM,OAAOC,KAAM,eAGnD,OAAJ3B,QAAI,IAAJA,GAAA,UAAAA,EAAMoB,YAAN,mBAAYM,cAAZ,eAAoBE,SACnB,yCACM3B,EAAE,OADR,KAEE,mBAAG4B,KAAM7B,EAAKoB,KAAKM,OAAOE,OAAQE,OAAO,WAAzC,SACG7B,EAAE,qBASF8B,yBAAKhC","file":"static/js/26.6a3322e9.chunk.js","sourcesContent":["import {SPRING_CONFIG_NUMBERS} from '../constants.js';\nimport {formatDate, formatNumber, getStatistic} from '../utils/commonFunctions';\n\nimport {memo, useMemo} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {animated, useSpring} from 'react-spring';\n\nfunction StateHeader({data, stateCode}) {\n  const {t} = useTranslation();\n\n  const trail = useMemo(() => {\n    const styles = [];\n\n    [0, 0, 0].map((element, index) => {\n      styles.push({\n        animationDelay: `${index * 250}ms`,\n      });\n      return null;\n    });\n\n    return styles;\n  }, []);\n\n  const spring = useSpring({\n    total: getStatistic(data, 'total', 'tested'),\n    config: SPRING_CONFIG_NUMBERS,\n  });\n\n  return (\n    <div className=\"StateHeader\">\n      <div className=\"header-left\">\n        <h1 className=\"state-name fadeInUp\" style={{animationDelay: 0}}>\n          Jammu and Kashmir\n        </h1>\n        {data?.meta?.['last_updated'] && (\n          <h5 className=\"fadeInUp\" style={trail[1]}>\n            {`${t('Last Updated on')} ${formatDate(\n              data.meta.last_updated,\n              'dd MMM, p'\n            )} ${t('IST')}`}\n          </h5>\n        )}\n      </div>\n\n      <div className=\"header-right fadeInUp\" style={trail[2]}>\n        <h5>{t('Tested')}</h5>\n        <animated.h2>\n          {spring.total.to((total) => formatNumber(total, 'long'))}\n        </animated.h2>\n        {data?.meta?.tested?.date && (\n          <h5 className=\"timestamp\">\n            {`${t('As of')} ${formatDate(data.meta.tested.date, 'dd MMMM')}`}\n          </h5>\n        )}\n        {data?.meta?.tested?.source && (\n          <h5>\n            {`${t('per')} `}\n            <a href={data.meta.tested.source} target=\"_noblank\">\n              {t('source')}\n            </a>\n          </h5>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default memo(StateHeader);\n"],"sourceRoot":""}