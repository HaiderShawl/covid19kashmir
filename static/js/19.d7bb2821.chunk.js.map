{"version":3,"sources":["components/Tooltip.js","components/loaders/MapVisualizer.js","components/snippets/Icons.js","components/StatisticDropdown.js","components/MapExplorer.js"],"names":["Tooltip","children","message","hold","childProps","handleClick","useCallback","e","stopPropagation","className","content","dangerouslySetInnerHTML","__html","trim","split","map","text","join","arrow","animation","touch","onClick","MapVisualizerLoader","width","statistic","windowWidth","window","innerWidth","mapHeight","height","MAP_LEGEND_HEIGHT","viewBox","speed","backgroundColor","STATISTIC_CONFIGS","color","cx","cy","r","Delta7Icon","size","PerLakhIcon","StatisticDropdown","currentStatistic","isPerLakh","delta7Mode","mapStatistic","setMapStatistic","mapType","hideDistrictTestData","hideVaccinated","zoneColor","t","useTranslation","useMeasure","wrapperRef","selectRef","useRef","currentStatisticConfig","statistics","useMemo","filteredStatistics","TABLE_STATISTICS_EXPANDED","filter","MAP_TYPES","COUNTRY","category","includes","handleChange","event","target","value","useEffect","tempSelect","document","createElement","tempOption","textContent","displayName","style","cssText","appendChild","current","after","tempSelectWidth","getBoundingClientRect","remove","ref","classnames","outlineColor","onChange","statisticConfig","capitalize","nonLinear","showDelta","onlyDelta7","isEqual","prevProps","currProps","equal","memo","MapVisualizer","lazy","retry","MapExplorer","stateCode","mapCode","data","mapView","MAP_VIEWS","DISTRICTS","setMapView","regionHighlighted","setRegionHighlighted","noRegionHighlightedDistrictData","anchor","setAnchor","expandTable","lastDataDate","hideDistrictData","noDistrictData","mapExplorerRef","useWindowSize","useSessionStorage","setIsPerLakh","setDelta7Mode","mapMeta","MAP_META","mapData","isDistrictView","STATE","hoveredRegion","hoveredData","districtName","districts","produce","draft","name","STATE_NAMES","handlePerLakhClick","handleDistrictClick","newMapView","STATES","history","useHistory","panelRef","location","hash","scrollIntoView","trail","styles","element","index","push","animationDelay","getMapStatistic","type","getStatistic","expiredDate","normalizedByPopulationPer","canBeNaN","currentVal","isNaN","spring","useSpring","total","config","tension","SPRING_CONFIG_NUMBERS","mapStatistics","MAP_STATISTICS","handleStatisticChange","direction","currentIndex","indexOf","toIndex","length","swipeHandlers","useSwipeable","onSwipedLeft","bind","this","onSwipedRight","mapViz","mapConfig","spike","MAP_VIZS","SPIKE","colorScale","CHOROPLETH","BUBBLE","handleDeltaClick","stickied","transformStatistic","val","transformFn","hidden","display","UNKNOWN_DISTRICT_KEY","div","to","hasPrimary","formatNumber","format","disabled","fallback","clientWidth","TT","meta"],"mappings":"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","file":"static/js/19.d7bb2821.chunk.js","sourcesContent":["import Tippy from '@tippyjs/react';\nimport {useCallback} from 'react';\n\nimport 'tippy.js/dist/tippy.css';\nimport 'tippy.js/animations/shift-away.css';\n\nfunction Tooltip({children, message, hold = false, childProps = {}}) {\n  const handleClick = useCallback((e) => e.stopPropagation(), []);\n\n  return (\n    <Tippy\n      className=\"Tooltip\"\n      content={\n        typeof message === 'string' ? (\n          <p\n            className=\"message\"\n            dangerouslySetInnerHTML={{\n              __html: message\n                .trim()\n                .split('\\n')\n                .map((text) => `<div>${text}</div>`)\n                .join(''),\n            }}\n          ></p>\n        ) : (\n          message\n        )\n      }\n      arrow={false}\n      animation=\"shift-away\"\n      touch={hold ? ['hold', 300] : true}\n    >\n      <div onClick={handleClick} {...childProps}>\n        {children}\n      </div>\n    </Tippy>\n  );\n}\n\nexport default Tooltip;\n","import {STATISTIC_CONFIGS, MAP_LEGEND_HEIGHT} from '../../constants';\n\nimport ContentLoader from 'react-content-loader';\n\n// Margins as declared in CSS\nexport const MAP_BUFFER_MARGINS = 42;\nexport const INDIA_ASPECT_RATIO = 0.885;\n\nconst MapVisualizerLoader = ({width, statistic}) => {\n  const windowWidth = window.innerWidth;\n  // Default width for loader\n  if (!width) width = windowWidth >= 769 ? 480 : windowWidth;\n  // From CSS\n  const scalingFactor = windowWidth >= 769 ? 0.9 : 1;\n  const mapHeight = (scalingFactor * width) / INDIA_ASPECT_RATIO;\n  const height = MAP_BUFFER_MARGINS + MAP_LEGEND_HEIGHT + mapHeight;\n  return (\n    <ContentLoader\n      viewBox={`0 0 ${width} ${height}`}\n      height={height}\n      width={width}\n      speed={2}\n      backgroundColor={STATISTIC_CONFIGS[statistic].color}\n    >\n      <circle cx={0.4 * width} cy={height / 2} r=\"5\" />\n      <circle cx={0.5 * width} cy={height / 2} r=\"5\" />\n      <circle cx={0.6 * width} cy={height / 2} r=\"5\" />\n    </ContentLoader>\n  );\n};\n\nexport default MapVisualizerLoader;\n","import {OrganizationIcon, PeopleIcon, PulseIcon} from '@primer/octicons-react';\n\nexport const Delta7Icon = () => (\n  <div className=\"Icons\">\n    <PulseIcon size={16} />\n    <span>7D</span>\n  </div>\n);\n\nexport const PerLakhIcon = () => (\n  <div className=\"Icons\">\n    <PeopleIcon size={16} />\n    <span>1L</span>\n  </div>\n);\n\nexport const DistrictIcon = () => (\n  <div className=\"Icons\">\n    <OrganizationIcon size={16} />\n  </div>\n);\n","import {\n  MAP_TYPES,\n  TABLE_STATISTICS_EXPANDED,\n  STATISTIC_CONFIGS,\n} from '../constants';\nimport {capitalize} from '../utils/commonFunctions';\n\nimport {TriangleRightIcon} from '@primer/octicons-react';\nimport classnames from 'classnames';\nimport equal from 'fast-deep-equal';\nimport {memo, useEffect, useCallback, useMemo, useRef} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useMeasure} from 'react-use';\n\nconst StatisticDropdown = ({\n  currentStatistic,\n  isPerLakh,\n  delta7Mode,\n  mapStatistic,\n  setMapStatistic,\n  mapType,\n  hideDistrictTestData,\n  hideVaccinated,\n  zoneColor,\n}) => {\n  const {t} = useTranslation();\n  const [wrapperRef, {width}] = useMeasure();\n  const selectRef = useRef();\n\n  const currentStatisticConfig = STATISTIC_CONFIGS[currentStatistic];\n\n  const statistics = useMemo(() => {\n    const filteredStatistics = TABLE_STATISTICS_EXPANDED.filter(\n      (statistic) =>\n        (mapType === MAP_TYPES.COUNTRY ||\n          STATISTIC_CONFIGS[statistic]?.category !== 'tested' ||\n          !hideDistrictTestData) &&\n        (STATISTIC_CONFIGS[statistic]?.category !== 'vaccinated' ||\n          !hideVaccinated)\n    );\n    return filteredStatistics.includes(currentStatistic)\n      ? filteredStatistics\n      : [currentStatistic, ...filteredStatistics];\n  }, [currentStatistic, mapType, hideDistrictTestData, hideVaccinated]);\n\n  const handleChange = useCallback(\n    (event) => {\n      setMapStatistic(event.target.value);\n    },\n    [setMapStatistic]\n  );\n\n  useEffect(() => {\n    const tempSelect = document.createElement('select');\n    const tempOption = document.createElement('option');\n\n    tempOption.textContent = STATISTIC_CONFIGS[mapStatistic]?.displayName;\n    tempSelect.style.cssText += `\n      visibility: hidden;\n      position: fixed;\n      `;\n\n    tempSelect.appendChild(tempOption);\n    selectRef.current.after(tempSelect);\n\n    const tempSelectWidth = tempSelect.getBoundingClientRect().width;\n    if (tempSelectWidth > 0) {\n      selectRef.current.style.width = `${tempSelectWidth + 2}px`;\n    }\n    tempSelect.remove();\n  }, [width, mapStatistic]);\n\n  return (\n    <div className=\"StatisticDropdown\" ref={wrapperRef}>\n      <div className={classnames('triangle-icon')}>\n        <TriangleRightIcon size={20} />\n      </div>\n      <select\n        ref={selectRef}\n        value={currentStatistic}\n        className={classnames(currentStatistic, zoneColor)}\n        style={\n          (zoneColor && {\n            color: zoneColor,\n            backgroundColor: zoneColor + '20',\n            outlineColor: zoneColor + '40',\n          }) ||\n          {}\n        }\n        onChange={handleChange}\n      >\n        {statistics.map((statistic) => {\n          const statisticConfig = STATISTIC_CONFIGS[statistic];\n          return (\n            <option key={statistic} value={statistic}>\n              {t(capitalize(statisticConfig?.displayName))}\n            </option>\n          );\n        })}\n      </select>\n      <span>{`${\n        isPerLakh &&\n        !currentStatisticConfig?.nonLinear &&\n        mapStatistic !== 'population'\n          ? ` ${t('per lakh')}`\n          : ''\n      }${\n        (delta7Mode && currentStatisticConfig?.showDelta) ||\n        currentStatisticConfig?.onlyDelta7\n          ? ` ${t('in last 7 days')}`\n          : ''\n      }`}</span>\n    </div>\n  );\n};\n\nconst isEqual = (prevProps, currProps) => {\n  if (!equal(prevProps.currentStatistic, currProps.currentStatistic)) {\n    return false;\n  } else if (!equal(prevProps.isPerLakh, currProps.isPerLakh)) {\n    return false;\n  } else if (!equal(prevProps.delta7Mode, currProps.delta7Mode)) {\n    return false;\n  } else if (!equal(prevProps.mapStatistic, currProps.mapStatistic)) {\n    return false;\n  } else if (!equal(prevProps.mapType, currProps.mapType)) {\n    return false;\n  } else if (\n    !equal(prevProps.hideDistrictTestData, currProps.hideDistrictTestData)\n  ) {\n    return false;\n  } else if (!equal(prevProps.hideVaccinated, currProps.hideVaccinated)) {\n    return false;\n  } else if (!equal(prevProps.zoneColor, currProps.zoneColor)) {\n    return false;\n  }\n  return true;\n};\n\nexport default memo(StatisticDropdown, isEqual);\n","import MapVisualizerLoader from './loaders/MapVisualizer';\nimport {Delta7Icon, PerLakhIcon} from './snippets/Icons';\nimport StatisticDropdown from './StatisticDropdown';\nimport Tooltip from './Tooltip';\n\nimport {\n  MAP_META,\n  MAP_TYPES,\n  MAP_VIEWS,\n  MAP_VIZS,\n  MAP_STATISTICS,\n  SPRING_CONFIG_NUMBERS,\n  STATE_NAMES,\n  STATISTIC_CONFIGS,\n  UNKNOWN_DISTRICT_KEY,\n} from '../constants';\nimport {formatNumber, getStatistic, retry} from '../utils/commonFunctions';\n\nimport {\n  ArrowLeftIcon,\n  DotFillIcon,\n  PinIcon,\n  OrganizationIcon,\n} from '@primer/octicons-react';\nimport classnames from 'classnames';\nimport equal from 'fast-deep-equal';\nimport produce from 'immer';\nimport {\n  memo,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  Suspense,\n  lazy,\n} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useHistory} from 'react-router-dom';\nimport {animated, useSpring} from 'react-spring';\nimport {useSwipeable} from 'react-swipeable';\nimport {useSessionStorage, useWindowSize} from 'react-use';\n\nconst MapVisualizer = lazy(() => retry(() => import('./MapVisualizer')));\n\nfunction MapExplorer({\n  stateCode: mapCode = 'TT',\n  data,\n  mapView = MAP_VIEWS.DISTRICTS,\n  setMapView,\n  mapStatistic,\n  setMapStatistic,\n  regionHighlighted,\n  setRegionHighlighted,\n  noRegionHighlightedDistrictData,\n  anchor,\n  setAnchor,\n  expandTable = false,\n  lastDataDate,\n  hideDistrictData = false,\n  hideDistrictTestData = true,\n  hideVaccinated = false,\n  noDistrictData = false,\n}) {\n  const {t} = useTranslation();\n  const mapExplorerRef = useRef();\n  const {width} = useWindowSize();\n\n  const [isPerLakh, setIsPerLakh] = useSessionStorage('isPerLakhMap', false);\n  const [delta7Mode, setDelta7Mode] = useSessionStorage('delta7ModeMap', false);\n\n  const mapMeta = MAP_META[mapCode];\n  const mapData =\n    mapMeta.mapType === MAP_TYPES.COUNTRY ? data : {[mapCode]: data[mapCode]};\n\n  const statisticConfig = STATISTIC_CONFIGS[mapStatistic];\n\n  const isDistrictView =\n    mapView === MAP_VIEWS.DISTRICTS &&\n    (mapMeta.mapType === MAP_TYPES.STATE ||\n      (!hideDistrictData &&\n        !(hideDistrictTestData && statisticConfig?.category === 'tested')));\n\n  const hoveredRegion = useMemo(() => {\n    const hoveredData =\n      (regionHighlighted.districtName\n        ? data[regionHighlighted.stateCode]?.districts?.[\n            regionHighlighted.districtName\n          ]\n        : data[regionHighlighted.stateCode]) || {};\n\n    return produce(hoveredData, (draft) => {\n      draft.name =\n        regionHighlighted.districtName ||\n        STATE_NAMES[regionHighlighted.stateCode];\n    });\n  }, [data, regionHighlighted.stateCode, regionHighlighted.districtName]);\n\n  const handlePerLakhClick = useCallback(() => {\n    const statisticConfig = STATISTIC_CONFIGS[mapStatistic];\n    if (statisticConfig?.nonLinear || mapStatistic === 'population') {\n      return;\n    }\n    setIsPerLakh((isPerLakh) => !isPerLakh);\n  }, [mapStatistic, setIsPerLakh]);\n\n  const handleDistrictClick = useCallback(() => {\n    const newMapView =\n      mapView === MAP_VIEWS.DISTRICTS ? MAP_VIEWS.STATES : MAP_VIEWS.DISTRICTS;\n    if (newMapView === MAP_VIEWS.STATES) {\n      setRegionHighlighted({\n        stateCode: regionHighlighted.stateCode,\n        districtName: null,\n      });\n    }\n    setMapView(newMapView);\n  }, [mapView, regionHighlighted.stateCode, setMapView, setRegionHighlighted]);\n\n  const history = useHistory();\n  const panelRef = useRef();\n\n  useEffect(() => {\n    if (history.location.hash === '#MapExplorer') {\n      panelRef.current.scrollIntoView();\n    }\n  }, [history]);\n\n  const trail = useMemo(() => {\n    const styles = [];\n\n    [0, 0, 0, 0, 0, 0, 0].map((element, index) => {\n      styles.push({\n        animationDelay: `${index * 250}ms`,\n      });\n      return null;\n    });\n\n    return styles;\n  }, []);\n\n  const getMapStatistic = useCallback(\n    (data) => {\n      const statisticConfig = STATISTIC_CONFIGS[mapStatistic];\n\n      const type =\n        (statisticConfig?.showDelta && delta7Mode) ||\n        statisticConfig?.onlyDelta7\n          ? 'delta7'\n          : 'total';\n\n      return getStatistic(data, type, mapStatistic, {\n        expiredDate: lastDataDate,\n        normalizedByPopulationPer:\n          isPerLakh && mapStatistic != 'population' ? 'lakh' : null,\n        canBeNaN: true,\n      });\n    },\n    [mapStatistic, isPerLakh, lastDataDate, delta7Mode]\n  );\n\n  let currentVal = getMapStatistic(hoveredRegion);\n  if (isNaN(currentVal)) {\n    currentVal = '-';\n  }\n\n  const spring = useSpring({\n    total: currentVal,\n    config: {tension: 250, ...SPRING_CONFIG_NUMBERS},\n  });\n\n  const mapStatistics = useMemo(\n    () =>\n      MAP_STATISTICS.filter(\n        (statistic) =>\n          !(STATISTIC_CONFIGS[statistic]?.category === 'vaccinated') ||\n          !hideVaccinated\n      ),\n    [hideVaccinated]\n  );\n\n  const handleStatisticChange = useCallback(\n    (direction) => {\n      const currentIndex = mapStatistics.indexOf(mapStatistic);\n      const toIndex =\n        (mapStatistics.length + currentIndex + direction) %\n        mapStatistics.length;\n      setMapStatistic(mapStatistics[toIndex]);\n    },\n    [mapStatistic, mapStatistics, setMapStatistic]\n  );\n\n  const swipeHandlers = useSwipeable({\n    onSwipedLeft: handleStatisticChange.bind(this, 1),\n    onSwipedRight: handleStatisticChange.bind(this, -1),\n  });\n\n  const mapViz = statisticConfig?.mapConfig?.spike\n    ? MAP_VIZS.SPIKE\n    : isPerLakh ||\n      statisticConfig?.mapConfig?.colorScale ||\n      statisticConfig?.nonLinear\n    ? MAP_VIZS.CHOROPLETH\n    : MAP_VIZS.BUBBLE;\n\n  const handleDeltaClick = useCallback(() => {\n    if (statisticConfig?.showDelta) {\n      setDelta7Mode((delta7Mode) => !delta7Mode);\n    }\n  }, [statisticConfig, setDelta7Mode]);\n\n  const stickied = anchor === 'mapexplorer' || (expandTable && width >= 769);\n\n  const transformStatistic = useCallback(\n    (val) =>\n      statisticConfig?.mapConfig?.transformFn\n        ? statisticConfig.mapConfig.transformFn(val)\n        : val,\n    [statisticConfig]\n  );\n\n  const zoneColor = statisticConfig?.mapConfig?.colorScale\n    ? statisticConfig.mapConfig.colorScale(transformStatistic(currentVal))\n    : '';\n\n  return (\n    <div\n      className={classnames(\n        'MapExplorer',\n        {stickied},\n        {\n          hidden:\n            anchor && anchor !== 'mapexplorer' && (!expandTable || width < 769),\n        }\n      )}\n    >\n      <div\n        className={classnames('anchor', 'fadeInUp', {\n          stickied,\n        })}\n        style={{\n          display: width < 769 || (width >= 769 && expandTable) ? 'none' : '',\n        }}\n        onClick={\n          setAnchor &&\n          setAnchor.bind(this, anchor === 'mapexplorer' ? null : 'mapexplorer')\n        }\n      >\n        <PinIcon />\n      </div>\n      <div className=\"panel\" ref={panelRef}>\n        <div className=\"panel-left fadeInUp\" style={trail[0]}>\n          <h2\n            className={classnames(mapStatistic)}\n            style={{color: zoneColor || statisticConfig?.color}}\n          >\n            {t(hoveredRegion.name)}\n            {hoveredRegion.name === UNKNOWN_DISTRICT_KEY &&\n              ` [${t(STATE_NAMES[regionHighlighted.stateCode])}]`}\n          </h2>\n\n          {regionHighlighted.stateCode && (\n            <h1\n              className={classnames('district', mapStatistic)}\n              style={{color: zoneColor || statisticConfig?.color}}\n            >\n              <animated.div>\n                {spring.total.to((total) =>\n                  !noRegionHighlightedDistrictData ||\n                  !statisticConfig?.hasPrimary\n                    ? formatNumber(total, statisticConfig.format, mapStatistic)\n                    : '-'\n                )}\n              </animated.div>\n              <StatisticDropdown\n                currentStatistic={mapStatistic}\n                statistics={mapStatistics}\n                mapType={mapMeta.mapType}\n                {...{\n                  isPerLakh,\n                  delta7Mode,\n                  mapStatistic,\n                  setMapStatistic,\n                  hideDistrictTestData,\n                  hideVaccinated,\n                  zoneColor,\n                }}\n              />\n            </h1>\n          )}\n        </div>\n\n        <div className={classnames('panel-right', `is-${mapStatistic}`)}>\n          <div className=\"switch-type\">\n            <Tooltip message={'Last 7 day values'} hold>\n              <div\n                className={classnames('toggle', 'fadeInUp', {\n                  'is-highlighted':\n                    (delta7Mode && statisticConfig?.showDelta) ||\n                    statisticConfig?.onlyDelta7,\n                  disabled: !statisticConfig?.showDelta,\n                })}\n                onClick={handleDeltaClick}\n                style={trail[1]}\n              >\n                <Delta7Icon />\n              </div>\n            </Tooltip>\n\n            <Tooltip message={'Per lakh people'} hold>\n              <div\n                className={classnames('toggle', 'fadeInUp', {\n                  'is-highlighted':\n                    !statisticConfig?.nonLinear &&\n                    mapViz === MAP_VIZS.CHOROPLETH,\n                  disabled:\n                    statisticConfig?.nonLinear || mapStatistic === 'population',\n                })}\n                onClick={handlePerLakhClick}\n                style={trail[2]}\n              >\n                <PerLakhIcon />\n              </div>\n            </Tooltip>\n\n            {mapMeta.mapType === MAP_TYPES.COUNTRY && (\n              <Tooltip message={'Toggle between states/districts'} hold>\n                <div\n                  className={classnames('toggle', 'boundary fadeInUp', {\n                    'is-highlighted': isDistrictView,\n                    disabled:\n                      hideDistrictData ||\n                      (statisticConfig?.category === 'tested' &&\n                        hideDistrictTestData),\n                  })}\n                  onClick={handleDistrictClick}\n                  style={trail[3]}\n                >\n                  <OrganizationIcon />\n                </div>\n              </Tooltip>\n            )}\n\n            {mapMeta.mapType === MAP_TYPES.STATE && (\n              <>\n                <div className=\"divider\" />\n                <div\n                  className=\"toggle back fadeInUp\"\n                  onClick={() => {\n                    history.push('/#MapExplorer');\n                  }}\n                  style={trail[4]}\n                >\n                  <ArrowLeftIcon />\n                </div>\n              </>\n            )}\n          </div>\n\n          <div className=\"switch-statistic fadeInUp\" style={trail[5]}>\n            {mapStatistics.map((statistic) => (\n              <div\n                key={statistic}\n                className={classnames(\n                  'toggle',\n                  'statistic-option',\n                  `is-${statistic}`,\n                  {\n                    'is-highlighted': mapStatistic === statistic,\n                  }\n                )}\n                onClick={setMapStatistic.bind(this, statistic)}\n              >\n                <DotFillIcon />\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      <div\n        ref={mapExplorerRef}\n        className=\"fadeInUp\"\n        style={trail[3]}\n        {...swipeHandlers}\n      >\n        {mapStatistic && (\n          <Suspense\n            fallback={\n              <MapVisualizerLoader\n                className=\"map-loader\"\n                {...{\n                  width: mapExplorerRef.current?.clientWidth,\n                  statistic: mapStatistic,\n                }}\n              />\n            }\n          >\n            <MapVisualizer\n              data={mapData}\n              statistic={mapStatistic}\n              {...{\n                mapCode,\n                isDistrictView,\n                mapViz,\n                regionHighlighted,\n                setRegionHighlighted,\n                getMapStatistic,\n                transformStatistic,\n                noDistrictData,\n              }}\n            ></MapVisualizer>\n          </Suspense>\n        )}\n      </div>\n    </div>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (!equal(prevProps.stateCode, currProps.stateCode)) {\n    return false;\n  } else if (!equal(prevProps.regionHighlighted, currProps.regionHighlighted)) {\n    return false;\n  } else if (!equal(prevProps.mapView, currProps.mapView)) {\n    return false;\n  } else if (!equal(prevProps.mapStatistic, currProps.mapStatistic)) {\n    return false;\n  } else if (!equal(prevProps.anchor, currProps.anchor)) {\n    return false;\n  } else if (!equal(prevProps.expandTable, currProps.expandTable)) {\n    return false;\n  } else if (!equal(prevProps.hideDistrictData, currProps.hideDistrictData)) {\n    return false;\n  } else if (\n    !equal(prevProps.hideDistrictTestData, currProps.hideDistrictTestData)\n  ) {\n    return false;\n  } else if (!equal(prevProps.hideVaccinated, currProps.hideVaccinated)) {\n    return false;\n  } else if (!equal(prevProps.lastDataDate, currProps.lastDataDate)) {\n    return false;\n  } else if (\n    !equal(\n      prevProps.data?.TT?.meta?.['last_updated'],\n      currProps.data?.TT?.meta?.['last_updated']\n    )\n  ) {\n    return false;\n  } else if (!equal(prevProps.data?.TT?.total, currProps.data?.TT?.total)) {\n    return false;\n  } else if (\n    !equal(\n      prevProps.noRegionHighlightedDistrictData,\n      currProps.noRegionHighlightedDistrictData\n    )\n  ) {\n    return false;\n  } else if (!equal(prevProps.noDistrictData, currProps.noDistrictData)) {\n    return false;\n  }\n  return true;\n};\n\nexport default memo(MapExplorer, isEqual);\n"],"sourceRoot":""}